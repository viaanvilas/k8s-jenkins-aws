pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "jyotivrathod/jhooq-docker-demo:jhooq-docker-demo"
    }

    stages {
        stage("Git Clone") {
            steps {
                git branch: 'main', url: 'https://github.com/viaanvilas/k8s-jenkins-aws.git'
            }
        }

        stage("Gradle Build") {
            steps {
                sh './gradlew build'
                sh 'ls -l build/libs/'  // ðŸ§ª Debug: Ensure JAR is built
            }
        }

        stage("Docker Build") {
            steps {
                sh 'docker version'
                sh "docker build -t jhooq-docker-demo ."
                sh 'docker images'
                sh "docker tag jhooq-docker-demo $DOCKER_IMAGE"
            }
        }

        stage("Docker Login & Push") {
            steps {
                withCredentials([string(credentialsId: 'DOCKER_HUB_PASSWORD', variable: 'PASSWORD')]) {
                    sh 'echo $PASSWORD | docker login -u jyotivrathod --password-stdin'
                    sh "docker push $DOCKER_IMAGE"
                }
            }
        }

        stage("Kubernetes Deployment") {
            steps {
                sh 'kubectl apply -f k8s-spring-boot-deployment.yml'
            }
        }
    }
}
